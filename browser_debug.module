<?php
/**
 * @file
 * Debugs session and logs to JavaScript console.
 *
 * To configure log files run the following command from root of Drupal site
 * amending log file paths as appropriate:
 * drush vset browser_debug_logs "/var/log/one.log,/var/log/two.log"
 */

include_once '/usr/local/include/composer/vendor/autoload.php';

/**
 * Implements hook_menu().
 */
function browser_debug_menu() {
  $items = array();
  $items['browser-debug/json'] = array(
    'page callback' => '_browser_debug_ajax_request',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Handle inbound ajax request.
 */
function _browser_debug_ajax_request() {
  $browser_debug = &drupal_static('browser_debug');
  $data = $browser_debug->getAllData();
  drupal_json_output($data);
  drupal_exit();
}

/**
 * Implements hook_boot().
 *
 * Gather log positions.
 */
function browser_debug_boot() {
  require_once 'BrowserDebug.php';
  $browser_debug = &drupal_static('browser_debug');
  if (!isset($browser_debug)) {
    $browser_debug = new BrowserDebug();
  }
}

/**
 * Impliments hook_exit().
 */
function browser_debug_exit() {
  $browser_debug = &drupal_static('browser_debug');
  $browser_debug->saveDump();
}

/**
 * Implements hook_ajax_render_alter().
 *
 * Add our own completion command to trigger client side actions.
 */
function browser_debug_ajax_render_alter(&$commands) {
  $browser_debug = &drupal_static('browser_debug');
  $commands[] = array('command' => 'browserDebugAjaxComplete');
}

/**
 * Implements hook_js_alter().
 *
 * Populate client side data in Drupal.settings.
 */
function browser_debug_js_alter() {
  static $done = FALSE;
  if (!$done) {
    if (current_path() !== 'system/ajax') {
      $done = TRUE;
      $browser_debug = &drupal_static('browser_debug');
      // $data = $browser_debug->getAllData();
      $settings = $browser_debug->getSettings();
      $settings['html'] = file_get_contents(drupal_get_path('module', 'browser_debug') . '/browser_debug.html');
      drupal_add_js(array('browserDebug' => $settings), 'setting');
    }
  }
}

/**
 * Dump a variable.
 *
 * @param mixed $var
 *   Variable to dump.
 */
function d($var, $label = '') {
  $browser_debug = &drupal_static('browser_debug');
  if (isset($browser_debug)) {
    $browser_debug->dump($var, $label);
  }
}
